<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pentesting on </title>
    <link>/tags/pentesting/</link>
    <description>Recent content in pentesting on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Feb 2023 00:28:29 -0600</lastBuildDate><atom:link href="/tags/pentesting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Buffer Overflow</title>
      <link>/posts/bof/</link>
      <pubDate>Fri, 03 Feb 2023 00:28:29 -0600</pubDate>
      
      <guid>/posts/bof/</guid>
      <description>Buffer overflow attacks have been a topic of discussion in the cybersecurity world for a long time, but I believe there&amp;rsquo;s always room for another perspective.
In this writeup, I will take a unique approach and walk you through the process of executing a buffer overflow attack using VSCode as my code editor and BurpSuite to generate the initial request in Python.
My goal is to provide a clear and concise explanation of this complex topic, so that even those with limited experience can understand the mechanics behind buffer overflow attacks.</description>
    </item>
    
  </channel>
</rss>
